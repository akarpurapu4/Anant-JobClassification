(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    262944,       5939]
NotebookOptionsPosition[    254877,       5808]
NotebookOutlinePosition[    255282,       5824]
CellTagsIndexPosition[    255239,       5821]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Machine Learning Job Classification", "Title",
 CellChangeTimes->{{3.836649679175209*^9, 
  3.836649680890899*^9}},ExpressionUUID->"f741e553-f188-4257-8df3-\
28585140145e"],

Cell[CellGroupData[{

Cell["Loading the data", "Section",
 CellChangeTimes->{{3.8366496860074744`*^9, 3.836649689747052*^9}, {
  3.836651008607891*^9, 3.8366510188458405`*^9}, {3.8369912939680777`*^9, 
  3.836991299627431*^9}},ExpressionUUID->"df0c7c3b-80b9-45cf-ae5a-\
6477999db1d5"],

Cell["\<\
Importing the data file \[OpenCurlyDoubleQuote]mindy_els.json\
\[CloseCurlyDoubleQuote]. Normally, a file would be imported using the \
statement in the comment, but it is being cloud imported for convenience.\
\>", "Text",
 CellChangeTimes->{{3.836650977039226*^9, 3.8366509884374247`*^9}, {
  3.8366510295243635`*^9, 3.836651035832382*^9}, {3.83699209330542*^9, 
  3.8369921443196745`*^9}},ExpressionUUID->"069c75fa-e362-43d7-8393-\
d1c337502471"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jobData", " ", "=", " ", 
  RowBox[{"CloudImport", "[", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/obj/anika.karpurapu/Data\"", 
       "https://www.wolframcloud.com/obj/anika.karpurapu/Data"},
      "HyperlinkURL"], "]"}],
    CloudObject["https://www.wolframcloud.com/obj/anika.karpurapu/Data"],
    SelectWithContents->True], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\anika\\\\Downloads\\\\job_classifier_data_and_\
reference\\\\elassandra_backups\\\\Pipeline_Notebooks\\\\mindy_els.json\>\"", 
     ",", " ", "\"\<JSON\>\""}], "]"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.8366496973585978`*^9, 3.8366496991311145`*^9}, {
  3.8369192274096437`*^9, 3.836919238221739*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"1a34124c-4d56-48f9-9f2c-af508d16f674"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             
             RowBox[{"\<\"slug\"\>", 
              "\[Rule]", \
"\<\"61362-remote-senior-android-developer-iot-europe-purepoint\"\>"}], ",", 
             RowBox[{"\<\"id\"\>", "\[Rule]", "\<\"61362\"\>"}], ",", 
             RowBox[{"\<\"epoch\"\>", "\[Rule]", "\<\"1502972704\"\>"}], ",", 
             RowBox[{"\<\"date\"\>", "\[Rule]", "\<\"Aug 17, 2017\"\>"}], ",", 
             RowBox[{"\<\"company\"\>", "\[Rule]", "\<\"Purepoint\"\>"}], ",", 
             TemplateBox[{"6"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"\<\"timepast\"\>", "\[Rule]", "0"}], ",", 
             
             RowBox[{"\<\"tags_display\"\>", 
              "\[Rule]", "\<\"Dev, Senior, Android, Digital Nomad, Jira, \
Chrome Os, Computer Architecture, Android, Computing, Smartphones, Agile \
Software Development, Software, Computing Platforms, Alphabet Inc.\"\>"}], 
             ",", 
             RowBox[{"\<\"title\"\>", "\[Rule]", "\<\"title\"\>"}], ",", 
             RowBox[{"\<\"new\"\>", "\[Rule]", "\<\" [New!]\"\>"}]}], "}"}], 
           ",", 
           TemplateBox[{"273"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{49.2099609375, {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39.884765625, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1, 30432068953468720132, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{46.73583984375, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1, 30432068953468720132, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{34.4970703125, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1, 30432068953468720132, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{59.73046875, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[30432068953468720132 === $SessionID, 
   Out[1], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.836649699751051*^9, 3.836651104989262*^9, 3.8369073691485124`*^9, 
   3.8369192391283503`*^9, 3.836992150695245*^9, 3.8369929892554445`*^9, 
   3.8369931707341475`*^9, 3.837079066432164*^9, 3.8370808098690033`*^9, 
   3.83716381693439*^9, 3.837167367612236*^9, 3.8371684735305405`*^9, 
   3.837168533098937*^9, 3.8371686665757008`*^9, {3.8371687264762383`*^9, 
   3.8371687434083385`*^9}, 3.837181576542218*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"77698085-93ea-48d0-8fd9-e2ce49d5534b"]
}, Open  ]],

Cell["Exporting the data file to the cloud.", "Text",
 CellChangeTimes->{{3.836992153643756*^9, 
  3.836992182394679*^9}},ExpressionUUID->"a93a4917-a070-49f5-aaa9-\
feed77ee8770"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"CloudExport", "[", 
   RowBox[{
   "jobData", ",", " ", "\"\<MX\>\"", ",", " ", "\"\<Data\>\"", ",", " ", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.836919045272209*^9, 3.836919061277444*^9}, {
  3.836919207320881*^9, 3.8369192469546843`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"51fec692-7406-4db8-97a9-66e6efe95156"],

Cell["Finding the classification for each data point.", "Text",
 CellChangeTimes->{{3.8369921920589542`*^9, 
  3.83699220825819*^9}},ExpressionUUID->"fcbc0fac-681f-4bb8-be8c-\
c11f9704d47f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"labelTypes", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"jobData", "[", 
        RowBox[{"[", "x", "]"}], "]"}], "[", 
       RowBox[{"[", "11", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"Length", "[", "jobData", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8369074623199124`*^9, 3.8369074780220327`*^9}, 
   3.8371686717844377`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"3b4de588-384b-456a-a507-40d43be1e55f"],

Cell["\<\
Deleting all the duplicates in the data classifications so that we can find \
all of the unique labels.\
\>", "Text",
 CellChangeTimes->{{3.8369922165782948`*^9, 
  3.8369922424306*^9}},ExpressionUUID->"85690d58-748d-48ed-af69-695693a8ca5a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "[", "labelTypes", "]"}]], "Input",
 CellChangeTimes->{{3.836907483512056*^9, 3.8369074897050533`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"247f7d12-c552-4466-9f5a-fb4daba187d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Interface Technical Architect\"\>", 
   ",", "\<\"Business Analyst\"\>", 
   ",", "\<\"Software Technical Architect\"\>", 
   ",", "\<\"System Technical Architect\"\>", ",", "\<\"Project Manager\"\>", 
   ",", "\<\"Database Technical Architect\"\>", 
   ",", "\<\"Miscellaneous\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.83690748995568*^9, 3.8369922451401033`*^9, 3.8369930048516855`*^9, 
   3.8369931787784567`*^9, 3.837079068372279*^9, 3.837080810157411*^9, 
   3.8371673682381873`*^9, 3.83716847421272*^9, 3.8371685334409657`*^9, 
   3.8371686669132147`*^9, {3.8371687266431527`*^9, 3.837168743573669*^9}, 
   3.837181577181159*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"2292662d-d492-4063-a47d-40049b990e12"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Splitting the data", "Section",
 CellChangeTimes->{{3.836651126014488*^9, 3.8366511364878387`*^9}, {
  3.836991094738109*^9, 3.8369910971497*^9}, {3.8369913014284873`*^9, 
  3.836991301518502*^9}},ExpressionUUID->"06f78f3c-668b-42e1-815e-\
0d9c3b3858db"],

Cell["\<\
Splitting the data into train and test sets using a 80-20 proportion.\
\>", "Text",
 CellChangeTimes->{{3.83699227048448*^9, 3.8369923039598417`*^9}, {
  3.836992361996028*^9, 
  3.8369923623391533`*^9}},ExpressionUUID->"a5f10cf8-598e-4795-acec-\
20f5c5905f06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"train", ",", " ", "test"}], "}"}], " ", "=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"SeedRandom", "[", "\"\<DataSplit\>\"", "]"}], ";", 
    RowBox[{
     RowBox[{"ResourceFunction", "[", "\"\<TrainTestSplit\>\"", "]"}], "[", 
     "jobData", "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8366504556969137`*^9, 3.8366504731376863`*^9}, {
  3.836650506199731*^9, 3.8366505089802837`*^9}, {3.836650564643096*^9, 
  3.8366506207184925`*^9}, {3.8366514768406777`*^9, 3.8366515523521767`*^9}, {
  3.8369931813867564`*^9, 3.836993182838987*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"ee1cb0dc-300d-4a5f-addb-1428fe12988a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               
               RowBox[{"\<\"slug\"\>", 
                "\[Rule]", \
"\<\"61043-remote-senior-mobile-product-manager-whitespectre\"\>"}], ",", 
               RowBox[{"\<\"id\"\>", "\[Rule]", "\<\"61043\"\>"}], ",", 
               RowBox[{"\<\"epoch\"\>", "\[Rule]", "\<\"1501160122\"\>"}], 
               ",", 
               RowBox[{"\<\"date\"\>", "\[Rule]", "\<\"Jul 27, 2017\"\>"}], 
               ",", 
               RowBox[{"\<\"company\"\>", "\[Rule]", "\<\"Whitespectre\"\>"}],
                ",", 
               TemplateBox[{"6"},
                "OutputSizeLimit`Skeleton"], ",", 
               RowBox[{"\<\"timepast\"\>", "\[Rule]", "21"}], ",", 
               
               RowBox[{"\<\"tags_display\"\>", 
                "\[Rule]", "\<\"Mobile, Senior, Product Manager, Exec, \
Project Management, Scrum, Software Development Process, Computing, \
Management, Mobile App, Agile Software Development, Software\"\>"}], ",", 
               RowBox[{"\<\"title\"\>", "\[Rule]", "\<\"title\"\>"}], ",", 
               RowBox[{"\<\"new\"\>", "\[Rule]", "\<\"\"\>"}]}], "}"}], ",", 
             TemplateBox[{"218"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"{", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"], "}"}]}], "}"}], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{49.2099609375, {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39.884765625, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 5, 30432068953468720132, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{46.73583984375, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 5, 30432068953468720132, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{34.4970703125, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 5, 30432068953468720132, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{59.73046875, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[30432068953468720132 === $SessionID, 
   Out[5], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{{3.8366505927656307`*^9, 3.8366506210180426`*^9}, {
   3.8366514953640375`*^9, 3.836651501404168*^9}, {3.8366515314844036`*^9, 
   3.8366515960770836`*^9}, 3.836907371572333*^9, 3.836992366537693*^9, 
   3.836993009687419*^9, 3.836993184933817*^9, 3.8370790719901333`*^9, 
   3.8370808102842655`*^9, 3.837167370473064*^9, 3.8371684754649673`*^9, 
   3.837168533576194*^9, 3.8371686670475793`*^9, {3.8371687267693415`*^9, 
   3.8371687436968946`*^9}, 3.837181579138509*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"cbefa086-2303-4070-a493-0c4c7951830d"]
}, Open  ]],

Cell["Checking the length of the training and test sets.", "Text",
 CellChangeTimes->{{3.8369923789599714`*^9, 
  3.8369923879294477`*^9}},ExpressionUUID->"b6e5acce-9712-4d18-b57b-\
37b8243732bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Length", ",", 
   RowBox[{"{", 
    RowBox[{"train", ",", " ", "test"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.836650594897728*^9, 3.836650630462675*^9}, {
  3.836650936777493*^9, 3.8366509560730624`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"b474431c-b462-407d-a020-2473d03d78e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"220", ",", "55"}], "}"}]], "Output",
 CellChangeTimes->{{3.8366505986989512`*^9, 3.836650630739046*^9}, {
   3.8366509438099704`*^9, 3.8366509563398123`*^9}, 3.8366515038364573`*^9, {
   3.8366515586907*^9, 3.83665159849858*^9}, 3.8369073735532436`*^9, 
   3.8369923727756157`*^9, 3.836993011413041*^9, 3.836993187159642*^9, 
   3.8370790724377112`*^9, 3.8370808103930326`*^9, 3.837167370677602*^9, 
   3.8371684756338167`*^9, 3.8371685336911373`*^9, 3.837168667166421*^9, {
   3.8371687268706245`*^9, 3.837168743793182*^9}, 3.8371815794281664`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"9d68b3b0-c0a2-44a7-a444-9c413cbbbb36"]
}, Open  ]],

Cell["View the 5th data point in the train set.", "Text",
 CellChangeTimes->{{3.8369923897899055`*^9, 
  3.8369924043673997`*^9}},ExpressionUUID->"96978f16-0964-4656-9c69-\
af14a31c8481"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"train", "[", 
  RowBox[{"[", "5", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8366514804654803`*^9, 3.836651481941867*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"6527e436-d447-4f0f-8133-1dfba9f7cda0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"slug\"\>", 
    "\[Rule]", "\<\"60920-remote-product-manager-salehoo-com\"\>"}], ",", 
   RowBox[{"\<\"id\"\>", "\[Rule]", "\<\"60920\"\>"}], ",", 
   RowBox[{"\<\"epoch\"\>", "\[Rule]", "\<\"1500616200\"\>"}], ",", 
   RowBox[{"\<\"date\"\>", "\[Rule]", "\<\"Jul 20, 2017\"\>"}], ",", 
   RowBox[{"\<\"company\"\>", "\[Rule]", "\<\"SaleHoo.com\"\>"}], ",", 
   RowBox[{"\<\"position\"\>", "\[Rule]", "\<\"Product Manager\"\>"}], ",", 
   RowBox[{"\<\"tags\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"User Experience\"\>", ",", "\<\"Saas\"\>", 
      ",", "\<\"Design\"\>", ",", "\<\"Product Manager\"\>", 
      ",", "\<\"Exec\"\>", ",", "\<\"Digital Nomad\"\>", 
      ",", "\<\"Product Manager\"\>", ",", "\<\"User Experience Design\"\>", 
      ",", "\<\"Product Marketing\"\>", ",", "\<\"Marketing\"\>", 
      ",", "\<\"Human\[Dash]Computer Interaction\"\>", ",", "\<\"Design\"\>", 
      ",", "\<\"Product Strategy\"\>", ",", "\<\"Business\"\>", 
      ",", "\<\"Web Design\"\>", ",", "\<\"E-Commerce\"\>", 
      ",", "\<\"Economy\"\>", ",", "\<\"Product Management\"\>"}], "}"}]}], 
   ",", 
   RowBox[{"\<\"logo\"\>", 
    "\[Rule]", \
"\<\"https://remoteok.io/assets/jobs/5c134dbbe2bb675cf02c3f8bd18fa620.png\"\>\
"}], ",", 
   RowBox[{"\<\"description\"\>", 
    "\[Rule]", "\<\"Doubledot Media (SaleHoo.com's parent company) is a New \
Zealand-based company creating online eCommerce tools for people looking to \
start their own online businesses. We're based in Christchurch, but over 95% \
of our team work remotely from various places around the world. (Living in \
the future FTW!)\"\>"}], ",", 
   RowBox[{"\<\"url\"\>", 
    "\[Rule]", \
"\<\"https://remoteok.io/jobs/60920-remote-product-manager-salehoo-com\"\>"}],
    ",", 
   RowBox[{"\<\"label\"\>", "\[Rule]", "\<\"Business Analyst\"\>"}], ",", 
   RowBox[{"\<\"timepast\"\>", "\[Rule]", "28"}], ",", 
   RowBox[{"\<\"tags_display\"\>", 
    "\[Rule]", "\<\"User Experience, Saas, Design, Product Manager, Exec, \
Digital Nomad, Product Manager, User Experience Design, Product Marketing, \
Marketing, Human\[Dash]Computer Interaction, Design, Product Strategy, \
Business, Web Design, E-Commerce, Economy, Product Management\"\>"}], ",", 
   RowBox[{"\<\"title\"\>", "\[Rule]", "\<\"title\"\>"}], ",", 
   RowBox[{"\<\"new\"\>", "\[Rule]", "\<\"\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.836651483118491*^9, 3.8366515098643847`*^9}, {
   3.836651561464189*^9, 3.8366516000227594`*^9}, 3.836907374966401*^9, 
   3.836992408125101*^9, 3.8369930131649046`*^9, 3.8369931887513294`*^9, 
   3.8370790730483947`*^9, 3.837080810525569*^9, 3.8371673707659206`*^9, 
   3.8371684757387686`*^9, 3.8371685337935295`*^9, 3.8371686672666397`*^9, {
   3.8371687269672675`*^9, 3.8371687438804207`*^9}, 3.8371815795895376`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"9e8b337d-5148-4963-ae40-a4a36cb98608"]
}, Open  ]],

Cell["View the 7th data point in the test set.", "Text",
 CellChangeTimes->{{3.8369924098661737`*^9, 
  3.8369924160541143`*^9}},ExpressionUUID->"433effff-ded9-43c4-9ce6-\
3792d0609eb2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"test", "[", 
  RowBox[{"[", "7", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8366514848279266`*^9, 3.8366514877021246`*^9}, {
  3.8366515781040244`*^9, 3.836651578824444*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"2a05c77e-b710-487e-844d-2c17862b77e8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"slug\"\>", 
    "\[Rule]", "\<\"61331-remote-junior-developer-conversio\"\>"}], ",", 
   RowBox[{"\<\"id\"\>", "\[Rule]", "\<\"61331\"\>"}], ",", 
   RowBox[{"\<\"epoch\"\>", "\[Rule]", "\<\"1502807359\"\>"}], ",", 
   RowBox[{"\<\"date\"\>", "\[Rule]", "\<\"Aug 15, 2017\"\>"}], ",", 
   RowBox[{"\<\"company\"\>", "\[Rule]", "\<\"Conversio\"\>"}], ",", 
   RowBox[{"\<\"position\"\>", "\[Rule]", "\<\"Junior Developer\"\>"}], ",", 
   RowBox[{"\<\"tags\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"Junior\"\>", ",", "\<\"Dev\"\>", 
      ",", "\<\"Digital Nomad\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"logo\"\>", 
    "\[Rule]", \
"\<\"https://we-work-remotely-production.imgix.net/logos/0001/6521/logo.gif\"\
\>"}], ",", 
   RowBox[{"\<\"description\"\>", "\[Rule]", "\<\"The Company\"\>"}], ",", 
   RowBox[{"\<\"url\"\>", 
    "\[Rule]", \
"\<\"https://remoteok.io/jobs/61331-remote-junior-developer-conversio\"\>"}], 
   ",", 
   RowBox[{"\<\"label\"\>", 
    "\[Rule]", "\<\"Interface Technical Architect\"\>"}], ",", 
   RowBox[{"\<\"timepast\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"tags_display\"\>", 
    "\[Rule]", "\<\"Junior, Dev, Digital Nomad\"\>"}], ",", 
   RowBox[{"\<\"title\"\>", "\[Rule]", "\<\"title\"\>"}], ",", 
   RowBox[{"\<\"new\"\>", "\[Rule]", "\<\"\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.836651487953663*^9, 3.836651514321336*^9}, {
   3.836651567540846*^9, 3.836651601955716*^9}, 3.8369073768139443`*^9, 
   3.8369924173900023`*^9, 3.836993015063223*^9, 3.8369931912111797`*^9, 
   3.837079073648077*^9, 3.837080810629439*^9, 3.8371673708661213`*^9, 
   3.837168475844016*^9, 3.8371685338990107`*^9, 3.837168667370618*^9, {
   3.8371687270695353`*^9, 3.837168743977397*^9}, 3.8371815797490034`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"f9f9e224-e0f4-40ac-ab9e-dc34603cc27c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing on the whole dataset", "Section",
 CellChangeTimes->{{3.8369078658982706`*^9, 
  3.836907868838258*^9}},ExpressionUUID->"43b1845c-100c-4c46-ad1e-\
11ccd2f13eef"],

Cell["\<\
Convert the data to an association, a data structure which is similar to a \
dictionary.\
\>", "Text",
 CellChangeTimes->{{3.836992431183831*^9, 
  3.836992446479703*^9}},ExpressionUUID->"c8239145-265c-4ae3-b17b-\
90a4695f66a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"input", " ", "=", " ", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<ToAssociations\>\"", "]"}], "[", 
   "train", "]"}]}]], "Input",
 CellChangeTimes->{{3.8369074282784953`*^9, 3.8369074346436696`*^9}, 
   3.8369075406375246`*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"ba9329a3-19ff-4dda-92b4-f746ccda13cd"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             
             RowBox[{"\<\"slug\"\>", 
              "\[Rule]", \
"\<\"61043-remote-senior-mobile-product-manager-whitespectre\"\>"}], ",", 
             RowBox[{"\<\"id\"\>", "\[Rule]", "\<\"61043\"\>"}], ",", 
             RowBox[{"\<\"epoch\"\>", "\[Rule]", "\<\"1501160122\"\>"}], ",", 
             RowBox[{"\<\"date\"\>", "\[Rule]", "\<\"Jul 27, 2017\"\>"}], ",", 
             RowBox[{"\<\"company\"\>", "\[Rule]", "\<\"Whitespectre\"\>"}], 
             ",", 
             TemplateBox[{"6"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"\<\"timepast\"\>", "\[Rule]", "21"}], ",", 
             
             RowBox[{"\<\"tags_display\"\>", 
              "\[Rule]", "\<\"Mobile, Senior, Product Manager, Exec, Project \
Management, Scrum, Software Development Process, Computing, Management, \
Mobile App, Agile Software Development, Software\"\>"}], ",", 
             RowBox[{"\<\"title\"\>", "\[Rule]", "\<\"title\"\>"}], ",", 
             RowBox[{"\<\"new\"\>", "\[Rule]", "\<\"\"\>"}]}], 
            "\[RightAssociation]"}], ",", 
           TemplateBox[{"218"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\[LeftAssociation]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{49.2099609375, {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39.884765625, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 9, 30432068953468720132, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{46.73583984375, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 9, 30432068953468720132, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{34.4970703125, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 9, 30432068953468720132, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{59.73046875, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[30432068953468720132 === $SessionID, 
   Out[9], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.8369074371574135`*^9, 3.8369075410008745`*^9, 3.836992425294321*^9, 
   3.8369930210963817`*^9, 3.8369931951779265`*^9, 3.837079074381484*^9, 
   3.8370808107894645`*^9, 3.837167371295821*^9, 3.837168476256321*^9, 
   3.8371685340330524`*^9, 3.8371686675257483`*^9, {3.8371687272057796`*^9, 
   3.8371687441176987`*^9}, 3.8371815803959084`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"71c93a4c-78a8-410d-a21f-3c7365f5fb5c"]
}, Open  ]],

Cell["Converts the data into a more organized form.", "Text",
 CellChangeTimes->{{3.8369924997941766`*^9, 
  3.8369925078615026`*^9}},ExpressionUUID->"e1796e67-d593-457c-9bbc-\
d96bc656e66d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"input", " ", "=", " ", 
   RowBox[{"Dataset", "[", "input", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8369075169747705`*^9, 3.836907545695279*^9}, 
   3.837168688435152*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"3eb7af07-f875-482c-bc88-9812a2d87064"],

Cell["\<\
Run the data through the classifier. We specify a parameter of \
\[OpenCurlyDoubleQuote]input -> \[OpenCurlyQuote]label\[CloseCurlyQuote]\
\[CloseCurlyDoubleQuote] because that is the feature we are trying to \
classify. \[OpenCurlyDoubleQuote]label\[CloseCurlyDoubleQuote] is the job \
classification.\
\>", "Text",
 CellChangeTimes->{{3.836992521886654*^9, 
  3.8369925744636493`*^9}},ExpressionUUID->"207c2ed1-3145-421b-862b-\
d6bff6a41055"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classifier", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"input", " ", "->", " ", "\"\<label\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.836907529326983*^9, 3.8369075556267767`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"5f0f9d07-3454-44ce-9818-f1c138acd1ee"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "14", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Text\"", ",", "\"Text\"", ",", "\"Text\"", ",",
                     "\"Nominal\"", ",", "\"Text\"", ",", "\"Text\"", ",", 
                    "\"NominalSequence\"", ",", "\"Text\"", ",", "\"Text\"", 
                    ",", "\"Text\"", ",", "\"Numerical\"", ",", "\"Text\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Text", "Text", "Text", "Nominal", "Text", "Text", 
                    "NominalSequence", "Text", "Text", "Text", "Numerical", 
                    "Text", "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["7", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Business Analyst\"", ",", 
                    "\"Database Technical Architect\"", ",", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], ",",
                     "\"Software Technical Architect\"", ",", 
                    "\"System Technical Architect\""}], "}"}], 
                    Short[#, 1]& ]], Annotation[#, 
                    
                    Short[{"Business Analyst", "Database Technical Architect",
                     "Interface Technical Architect", "Miscellaneous", 
                    "Project Manager", "Software Technical Architect", 
                    "System Technical Architect"}, 1], "Tooltip"]& ], 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "14", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Text\"", ",", "\"Text\"", ",", "\"Text\"", ",",
                     "\"Nominal\"", ",", "\"Text\"", ",", "\"Text\"", ",", 
                    "\"NominalSequence\"", ",", "\"Text\"", ",", "\"Text\"", 
                    ",", "\"Text\"", ",", "\"Numerical\"", ",", "\"Text\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Text", "Text", "Text", "Nominal", "Text", "Text", 
                    "NominalSequence", "Text", "Text", "Text", "Numerical", 
                    "Text", "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["7", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Business Analyst\"", ",", 
                    "\"Database Technical Architect\"", ",", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], ",",
                     "\"Software Technical Architect\"", ",", 
                    "\"System Technical Architect\""}], "}"}], 
                    Short[#, 1]& ]], Annotation[#, 
                    
                    Short[{"Business Analyst", "Database Technical Architect",
                     "Interface Technical Architect", "Miscellaneous", 
                    "Project Manager", "Software Technical Architect", 
                    "System Technical Architect"}, 1], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["220", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[ClassifierFunction, 10622888, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", ClassifierFunction, 10622888, 
            10355496453787542815527741953591306576995576823005036578272, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  BoxID -> 10355496453787542815527741953591306576995576823005036578272,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8369075598034363`*^9, 3.836992585862545*^9, 3.8369930412741203`*^9, 
   3.836993223465057*^9, 3.8370790888455725`*^9, 3.837080816324753*^9, 
   3.8371673780628085`*^9, 3.837168482268617*^9, 3.837168538501408*^9, 
   3.837168671946701*^9, {3.837168730809704*^9, 3.837168747794083*^9}, {
   3.8371815915610104`*^9, 3.8371816335126066`*^9}},
 CellLabel->"Out[32]=",ExpressionUUID->"d0678557-5c5a-433b-ab41-579eb97089ed"]
}, Open  ]],

Cell["\<\
Remove the \[OpenCurlyDoubleQuote]label\[CloseCurlyDoubleQuote] feature from \
the test set so that we can test the accuracy of the classifier.\
\>", "Text",
 CellChangeTimes->{{3.83699259768927*^9, 
  3.836992611891864*^9}},ExpressionUUID->"95389416-6172-4a39-a4a6-\
c6981806e1dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testSet", " ", "=", " ", 
   RowBox[{"KeyDrop", "[", 
    RowBox[{"test", ",", " ", 
     RowBox[{"{", "\"\<label\>\"", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.836907577270893*^9, 3.8369075917817516`*^9}, 
   3.8371686916641865`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"05fc0a16-6fcc-463c-a2d5-ee2b9ce455d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testSet", " ", "=", " ", 
   RowBox[{"Dataset", "[", "testSet", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8369075992777653`*^9, 3.8369076065200834`*^9}, 
   3.8371686932525215`*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"8785d141-7bc9-4243-be73-98c97b2fca04"],

Cell["Running the test set through the classifier", "Text",
 CellChangeTimes->{{3.836992624696325*^9, 
  3.836992629352984*^9}},ExpressionUUID->"8ff40017-2997-40ce-af39-\
1ddc8b960f86"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testOutput", " ", "=", " ", 
   RowBox[{"classifier", "[", "testSet", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.836907615022746*^9, 3.836907626527939*^9}, 
   3.837168695085288*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"581d2d36-ebda-4468-bc01-e76f149d396b"],

Cell["The real classification for each data point in the test set", "Text",
 CellChangeTimes->{{3.8369926477191105`*^9, 
  3.8369926548620253`*^9}},ExpressionUUID->"02a422bf-10a2-4a2b-a379-\
126295297dd6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"realOutput", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"test", "[", 
        RowBox[{"[", "x", "]"}], "]"}], "[", 
       RowBox[{"[", "11", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"Length", "[", "test", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8369076938954196`*^9, 3.8369077469730225`*^9}, 
   3.837168696893034*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"cac67f45-6966-43bd-a854-f452647911ee"],

Cell["\<\
Abbreviating the outputs for the test set so that it is easier to visualize.\
\>", "Text",
 CellChangeTimes->{{3.836992667156907*^9, 
  3.83699268507077*^9}},ExpressionUUID->"38d272f8-c743-4106-b203-\
b5be781f91df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"realOutput", " ", "=", " ", 
  RowBox[{"StringReplace", "[", 
   RowBox[{"realOutput", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
      "\"\<Interface Technical Architect\>\"", " ", "->", " ", 
       "\"\<ITA\>\""}], ",", " ", 
      RowBox[{"\"\<Business Analyst\>\"", " ", "->", " ", "\"\<BA\>\""}], ",",
       " ", 
      RowBox[{
      "\"\<System Technical Architect\>\"", " ", "->", " ", "\"\<SyTA\>\""}], 
      ",", " ", 
      RowBox[{
      "\"\<Software Technical Architect\>\"", " ", "->", " ", 
       "\"\<SoTA\>\""}], ",", " ", 
      RowBox[{"\"\<Project Manager\>\"", " ", "->", " ", "\"\<PM\>\""}], ",", 
      " ", 
      RowBox[{
      "\"\<Database Technical Architect\>\"", " ", "->", " ", "\"\<DTA\>\""}],
       ",", " ", 
      RowBox[{"\"\<Miscellaneous\>\"", " ", "->", " ", "\"\<Misc\>\""}]}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8369077515978327`*^9, 3.836907762584796*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"613a0ed1-2d2e-47ea-be99-e044411b5262"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"SoTA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"BA\"\>", 
   ",", "\<\"SyTA\"\>", ",", "\<\"BA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"BA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"BA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"BA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"BA\"\>", 
   ",", "\<\"BA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"BA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"BA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"BA\"\>", ",", "\<\"BA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"SoTA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"BA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8369077627986937`*^9, 3.836992686637145*^9, 3.8369930608333397`*^9, 
   3.8369932468962097`*^9, 3.8370790929704137`*^9, 3.8370808189420257`*^9, 
   3.837167379983887*^9, 3.8371684841468105`*^9, 3.8371685403330803`*^9, 
   3.837168673780443*^9, {3.837168731491828*^9, 3.8371687482915263`*^9}, 
   3.8371815928088408`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"20f9714e-835b-435a-aad0-1012663a812a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"predictedOutput", " ", "=", " ", 
  RowBox[{"StringReplace", "[", 
   RowBox[{"testOutput", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
      "\"\<Interface Technical Architect\>\"", " ", "->", " ", 
       "\"\<ITA\>\""}], ",", " ", 
      RowBox[{"\"\<Business Analyst\>\"", " ", "->", " ", "\"\<BA\>\""}], ",",
       " ", 
      RowBox[{
      "\"\<System Technical Architect\>\"", " ", "->", " ", "\"\<SyTA\>\""}], 
      ",", " ", 
      RowBox[{
      "\"\<Software Technical Architect\>\"", " ", "->", " ", 
       "\"\<SoTA\>\""}], ",", " ", 
      RowBox[{"\"\<Project Manager\>\"", " ", "->", " ", "\"\<PM\>\""}], ",", 
      " ", 
      RowBox[{
      "\"\<Database Technical Architect\>\"", " ", "->", " ", "\"\<DTA\>\""}],
       ",", " ", 
      RowBox[{"\"\<Miscellaneous\>\"", " ", "->", " ", "\"\<Misc\>\""}]}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.836907660478629*^9, 3.836907719595813*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"ea4637d1-8c28-4685-8ac4-6a4fa7c55f1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"SyTA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"BA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"BA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"BA\"\>", ",", "\<\"BA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"BA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.83690771990351*^9, 3.836992688013173*^9, 3.8369930625096335`*^9, 
   3.836993249098686*^9, 3.8370790931327257`*^9, 3.837080819063971*^9, 
   3.837167380077482*^9, 3.837168484258469*^9, 3.837168540453639*^9, 
   3.8371686738827024`*^9, {3.837168731599*^9, 3.837168748419686*^9}, 
   3.837181592995104*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"530d73ea-7aa8-4bb7-baf7-efdc2654b49e"]
}, Open  ]],

Cell["\<\
Testing the accuracy of the classifier based on the real and predicted \
outputs from the test set.\
\>", "Text",
 CellChangeTimes->{{3.8369926922493677`*^9, 
  3.836992710855386*^9}},ExpressionUUID->"f04d91bf-7ea5-4a32-b749-\
08b4e5a9d9cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{
  "predictedOutput", ",", " ", "realOutput", ",", " ", "\"\<Accuracy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.83690779064878*^9, 3.8369078326065516`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"5aa6f70a-e0ed-477f-afd1-1c9460a47928"],

Cell[BoxData["0.7636363636363637`"], "Output",
 CellChangeTimes->{{3.836907802438818*^9, 3.8369078331466956`*^9}, 
   3.8369927129837036`*^9, 3.8369930651157465`*^9, 3.836993251177478*^9, 
   3.8370790938366566`*^9, 3.8370808195571337`*^9, 3.8371673805667667`*^9, 
   3.837168484619862*^9, 3.8371685407527275`*^9, 3.837168674187186*^9, {
   3.8371687318904047`*^9, 3.8371687487156563`*^9}, 3.837181593798833*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"48526cb2-8be6-4fe9-8610-7e8ff236d302"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"predictedOutput", ",", " ", "realOutput"}], "]"}]], "Input",
 CellChangeTimes->{{3.8369078217772236`*^9, 3.8369078386145377`*^9}, {
  3.8369933956503763`*^9, 3.8369933964147644`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"92946865-3b2b-46cf-af77-1fab195a959c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Number of test examples"], 
                   TextCell["Number of test examples"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], "55"},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Accuracy"], 
                   TextCell["Accuracy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 RowBox[{"(", 
                   InterpretationBox[
                    
                    TemplateBox[{"76.", "6."}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    76.3636363636363739715`3., 5.7814497055572608986`3.]], 
                   ")"}], "\"%\"", "percent", "\"Percent\""},
                "QuantityPostfix"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                    "\"Accuracy if predicting the commonest class\"", 
                    LabelStyle -> "TextStyling"], 
                   Annotation[#, "Accuracy if predicting the commonest class",
                     "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 RowBox[{"(", 
                   InterpretationBox[
                    
                    TemplateBox[{"73.", "6."}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    72.7272727272727337322`3., 6.0606060606060765394`3.]], 
                   ")"}], "\"%\"", "percent", "\"Percent\""},
                "QuantityPostfix"]},
              {
               ItemBox[
                GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGwI+2FNK61rN9fml/s5eREzcfemlN/YvOupMnvx4
jlO9huHkyeFr39obqz/baMP82v7OzPiFbc6PSbaXkDkPq0TWuT+8Zc+AAog3
/59qypIYw7f2sukbov9pvrS/82DD927Ru/Y1XSLHbTze2K859uZKk95Te7Ud
rx5NvX6KZPcDALlXaBs=
                  "], {{0, 0}, {4, 4}}, {0, 1}],
                 Epilog->{{
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "3", "\" examples of \"", "\"BA\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.6`"}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.25`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.35294117647058826`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{3, " examples of ", "BA", " correctly classified"}], 
                    Row[{"Precision = ", 0.6}], 
                    Row[{"Recall = ", 0.25}], 
                    Row[{"FScore = ", 0.35294117647058826`}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "\"ITA\"", 
                    "\" misclassified as \"", "\"BA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.4`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.05`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{2, " examples of ", "ITA", " misclassified as ", 
                    "BA"}], 
                    Row[{"Column fraction = ", 0.4}], 
                    Row[{"Row fraction = ", 0.05}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"SoTA\"", 
                    "\" misclassified as \"", "\"BA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "SoTA", " misclassified as ", 
                    "BA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"SyTA\"", 
                    "\" misclassified as \"", "\"BA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "SyTA", " misclassified as ", 
                    "BA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["9", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "9", "\" examples of \"", "\"BA\"", 
                    "\" misclassified as \"", "\"ITA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.1836734693877551`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.75`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{9, " examples of ", "BA", " misclassified as ", 
                    "ITA"}], 
                    Row[{"Column fraction = ", 0.1836734693877551}], 
                    Row[{"Row fraction = ", 0.75}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["38", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "38", "\" examples of \"", "\"ITA\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.7755102040816326`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.95`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.8539325842696629`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{38, " examples of ", "ITA", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.7755102040816326}], 
                    Row[{"Recall = ", 0.95}], 
                    Row[{"FScore = ", 0.8539325842696629}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "\"SoTA\"", 
                    "\" misclassified as \"", "\"ITA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.04081632653061224`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "1.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{2, " examples of ", "SoTA", " misclassified as ", 
                    "ITA"}], 
                    Row[{"Column fraction = ", 0.04081632653061224}], 
                    Row[{"Row fraction = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"SyTA\"", 
                    "\" misclassified as \"", "\"ITA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "SyTA", " misclassified as ", 
                    "ITA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"BA\"", 
                    "\" misclassified as \"", "\"SoTA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "BA", " misclassified as ", 
                    "SoTA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"ITA\"", 
                    "\" misclassified as \"", "\"SoTA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", "ITA", " misclassified as ", 
                    "SoTA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"SoTA\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "0.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", "SoTA", " correctly classified"}], 
                    Row[{"Precision = ", 0.}], 
                    Row[{"Recall = ", 0.}], 
                    Row[{"FScore = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"SyTA\"", 
                    "\" misclassified as \"", "\"SoTA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "SyTA", " misclassified as ", 
                    "SoTA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"BA\"", 
                    "\" misclassified as \"", "\"SyTA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "BA", " misclassified as ", 
                    "SyTA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"ITA\"", 
                    "\" misclassified as \"", "\"SyTA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "ITA", " misclassified as ", 
                    "SyTA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"SoTA\"", 
                    "\" misclassified as \"", "\"SyTA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "SoTA", " misclassified as ", 
                    "SyTA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"SyTA\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example of ", "SyTA", " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 1.}]}], "Tooltip"]& ]}, 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "12", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"BA\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.25`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{12, " example", "s", " of class ", "BA"}], 
                    Row[{"Recall = ", 0.25}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "40", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"ITA\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.95`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{40, " example", "s", " of class ", "ITA"}], 
                    Row[{"Recall = ", 0.95}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"SoTA\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " example", "s", " of class ", "SoTA"}], 
                    Row[{"Recall = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example\"", "\"\"", "\" of class \"", 
                    "\"SyTA\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example", "", " of class ", "SyTA"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"BA\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.6`"}, "RowDefault"]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5, " example", "s", " classified as ", "BA"}], 
                    Row[{"Precision = ", 0.6}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "49", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"ITA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.7755102040816326`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{49, " example", "s", " classified as ", "ITA"}], 
                    Row[{"Precision = ", 0.7755102040816326}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example\"", "\"\"", "\" classified as \"", 
                    "\"SoTA\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example", "", " classified as ", "SoTA"}], 
                    Row[{"Precision = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example\"", "\"\"", "\" classified as \"", 
                    "\"SyTA\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example", "", " classified as ", "SyTA"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ]},
                 Frame->True,
                 FrameLabel->{
                   FormBox["\"predicted class\"", TraditionalForm], 
                   FormBox["\"actual class\"", TraditionalForm]},
                 FrameTicks->{{{{3.5, 
                    FormBox[
                    RotationBox["\"BA\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["\"ITA\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["\"SoTA\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {0.5, 
                    FormBox[
                    RotationBox["\"SyTA\"", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{3.5, 
                    FormBox["12", TraditionalForm]}, {2.5, 
                    FormBox["40", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {0.5, 
                    FormBox["1", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["5", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["49", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["0", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["1", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox["\"BA\"", BoxRotation -> 1.5707963267948966`],
                     TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox[
                    "\"ITA\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox[
                    "\"SoTA\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox[
                    "\"SyTA\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                 FrameTicksStyle->13,
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.4]],
                 ImageSize->212.4,
                 
                 Method->{
                  "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                   Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                 PlotRangePadding->None],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
           NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  ClassifierMeasurementsObject[
   Association["Model" -> ClassifierFunction[
      Association[
      "ExampleNumber" -> 8, "ClassNumber" -> 4, "Input" -> 
       Association[
        "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
           Association[
           "Input" -> Association["f1" -> Association["Type" -> "Numerical"]],
             "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
            "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
              Association["Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor["WrapMLDataset", 
                  Association[
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False]]}]], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"]], "Processor" -> 
         MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
            "Output" -> 
            Association[
             "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]],
             "Processors" -> {
              MachineLearning`MLProcessor["SynthesizeMissingValues", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                "StructurePreserving" -> True, "Input" -> 
                Association[
                 "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
                "Distribution" -> LearnedDistribution[
                  Association[
                  "ExampleNumber" -> 8, "Preprocessor" -> 
                   MachineLearning`MLProcessor["ToMLDataset", 
                    Association[
                    "Input" -> 
                    Association["f1" -> Association["Type" -> "Numerical"]], 
                    "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1]], "Preprocessor" -> 
                    MachineLearning`MLProcessor["Identity"], "ScalarFeature" -> 
                    True, "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    False, "Missing" -> "Allowed"]], "Processor" -> 
                   MachineLearning`MLProcessor["ToVector", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Version" -> {12.3, 0}, "ID" -> 2729918768343498454]], 
                   "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                   Automatic, "Model" -> 
                   Association[
                    "RotationMatrix" -> {{1.}}, 
                    "Precisions" -> {0.19047619047619047`}, "NoisePrecision" -> 
                    None, "Processor" -> MachineLearning`MLProcessor["Center", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {4.5}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Version" -> {12.3, 0}, "ID" -> 8640973260251844664]], 
                    "PostProcessor" -> 
                    MachineLearning`MLProcessor["FirstValues", 
                    Association[
                    "Info" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1], "Key" -> 
                    "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    False, "Missing" -> "Allowed"]], "Method" -> 
                    "Multinormal", "Options" -> 
                    Association[
                    "CovarianceType" -> 
                    Association[
                    "Value" -> "Full", "Options" -> Association[]], 
                    "IntrinsicDimension" -> 
                    Association["Value" -> 1, "Options" -> Association[]]]], 
                   "TrainingInformation" -> 
                   Association["Configurations" -> Dataset[
                    Association[
                    Association[
                    "Value" -> "Multinormal", "Options" -> 
                    Association[
                    "CovarianceType" -> Association["Value" -> "Full"], 
                    "IntrinsicDimension" -> 
                    Association["Value" -> "Heuristic"]], "NaiveImputer" -> 
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {4.5}, 
                    "StandardDeviation" -> {2.29128784747792}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector", "Version" -> {12.3, 0}, "ID" -> 
                    3124670018105563885]], "EMIterations" -> 1] -> 
                    Association[]], 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], 
                    Association[]], "BestModelInformation" -> Dataset[
                    Association[
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]], 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], 
                    Association[]]], "NaiveImputer" -> 
                   MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {4.5}, 
                    "StandardDeviation" -> {2.29128784747792}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector", "Version" -> {12.3, 0}, "ID" -> 
                    3124670018105563885]], "InputDimension" -> 0, 
                   "OutputDimension" -> 1, "Log" -> 
                   Association["Example" -> MachineLearning`MLDataset[
                    Association[
                    "f1" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {8}, 
                    "ID" -> 326628518844981278]], 
                    Association[
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False]], 
                    "TrainingTime" -> 0.136569, "MaxTrainingMemory" -> 167544,
                     "DataMemory" -> 1888, "FunctionMemory" -> 31608, 
                    "LanguageVersion" -> {12.3, 0}, "Date" -> 
                    DateObject[{
                    2021, 8, 5, 15, 46, 34.0765894`9.28503101776269}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "Windows", "SystemWordLength" -> 64, "Evaluations" -> {}],
                    "LogPDFDistribution" -> 
                   MachineLearning`TailedQuantileDistribution[
                    Association[
                    "Quantiles" -> {-3.0595451509085603`, \
-3.0595451509085603`, -3.0521436082849673`, -2.533828019879282, \
-2.3252450614630202`, -1.9622784950921217`, -1.8793336654432569`, \
-1.8104810056358875`, -1.7543765881628184`, -1.7539163973683056`, \
-1.7509872086767213`}, "LeftBoundary" -> -3.0521436082849673`, "LeftScale" -> 
                    0.0037007713117964696`, "LeftTailNorm" -> 0.2]], 
                   "Entropy" -> 
                   Around[2.1882135200914945`, 0.16669838392380606`], 
                   "EntropySampleSize" -> 10]], "Output" -> 
                Association[
                 "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
                "EvaluationStrategy" -> "ModeFinding", "Version" -> {12.3, 0},
                 "ID" -> 895810465636885430]], 
              MachineLearning`MLProcessor["ToVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, "Input" -> 
                Association[
                 "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
                "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Version" -> {12.3, 0}, "ID" -> 1315539196371995972]], 
              MachineLearning`MLProcessor["Standardize", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Mean" -> {4.5}, "StandardDeviation" -> {2.29128784747792}, 
                "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Version" -> {12.3, 0}, "ID" -> 8587321254497897969]]}, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
            "Missing" -> "Imputed"]]], "Output" -> 
       Association[
        "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
           Association[
           "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
            "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
            "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
              Association["Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor["WrapMLDataset", 
                  Association[
                  "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False]]}]], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"]], "Processor" -> 
         MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
            "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
            "Processors" -> {
              MachineLearning`MLProcessor["ToVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, "Input" -> 
                Association[
                 "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NominalVector", "Weight" -> 1]], 
                "Version" -> {12.3, 0}, "ID" -> 2328525944266912936]], 
              MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NominalVector", "Weight" -> 1]], "Index" -> {
                  Association[
                  "BA" -> 1, "ITA" -> 2, "SoTA" -> 3, "SyTA" -> 4]}, 
                "MissingCode" -> 0, "Version" -> {12.3, 0}, "ID" -> 
                836781571002392288, "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NominalVector", "Weight" -> 1]]]], 
              MachineLearning`MLProcessor["FromVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NominalVector", "Weight" -> 1, 
                    "SetSize" -> {4}]], "Output" -> 
                Association[
                 "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                "Version" -> {12.3, 0}, "ID" -> 3207760950723974154]], 
              MachineLearning`MLProcessor["FirstValues", 
               Association[
               "Info" -> Association[
                 "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 4], "Key" -> 
                "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                False, "Missing" -> "Allowed"]]}, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"]], "ProbabilityPostprocessor" -> Identity, "Name" -> 
         "class", "Marginal" -> 
         Association[
          "BA" -> 0.25, "ITA" -> 0.25, "SoTA" -> 0.25, "SyTA" -> 0.25]], 
       "LabelSplitter" -> MachineLearning`MLProcessor["FeatureLabelSplit", 
         Association[
         "Processor" -> MachineLearning`MLProcessor["RuleSplit"], 
          "PreferLabeled" -> True, "KeepLabelsFormat" -> False]], 
       "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
       "Prior" -> Automatic, "Utility" -> 
       SparseArray[
        Automatic, {4, 5}, 0., {
         1, {{0, 1, 2, 3, 4}, {{2}, {3}, {4}, {5}}}, {1., 1., 1., 1.}}], 
       "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
       "DirectTraining", "BatchProcessing" -> Automatic, "Model" -> 
       Association["LogProbabilitiesFunction" -> LinearLayer[
           Association[
           "Type" -> "Linear", "Arrays" -> 
            Association[
             "Weights" -> 
              RawArray["Real32",{{
                0.4924290180206299}, {-0.5518481135368347}, {
                1.05144202709198}}], "Biases" -> 
              RawArray[
                "Real32",{-0.0003941850154660642, -0.24470970034599304`, \
-0.2502409517765045}]], "Parameters" -> 
            Association[
             "OutputDimensions" -> {3}, "$OutputSize" -> 3, "$InputSize" -> 1,
               "$InputDimensions" -> {1}], "Inputs" -> 
            Association[
             "Input" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]], 
            "Outputs" -> 
            Association[
             "Output" -> NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]], 
           Association["Version" -> "12.3.2", "Unstable" -> False]], 
         "Processor" -> MachineLearning`MLProcessor["FirstValues", 
           Association[
           "Info" -> Association["Weight" -> 1, "Type" -> "NumericalVector"], 
            "Key" -> "f1", "Invertibility" -> "Perfect", 
            "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
         "Calibrator" -> None, "Method" -> Missing[], "PostProcessor" -> 
         MachineLearning`MLProcessor["Identity"], "Options" -> 
         Association[
          "L1Regularization" -> 
           Association["Value" -> 0, "Options" -> Association[]], 
           "L2Regularization" -> 
           Association["Value" -> 0, "Options" -> Association[]], 
           "OptimizationMethod" -> 
           Association["Value" -> "LBFGS", "Options" -> Association[]], 
           MaxIterations -> 
           Association["Value" -> 30, "Options" -> Association[]]]], 
       "TrainingInformation" -> Association["Configurations" -> Dataset[
           Association[
           Association[
             "Value" -> "LogisticRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]], "NaiveImputer" -> 
              Missing["KeyAbsent", "NaiveImputer"], "EMIterations" -> 
              Missing["KeyAbsent", "EMIterations"]] -> Association[]], 
           TypeSystem`Assoc[
            
            TypeSystem`Struct[{
             "Value", "Options", "NaiveImputer", "EMIterations"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4], 
              TypeSystem`UnknownType, TypeSystem`UnknownType}], 
            TypeSystem`Assoc[
            TypeSystem`UnknownType, TypeSystem`UnknownType, 
             TypeSystem`AnyLength], 1], 
           Association[]], "BestModelInformation" -> Dataset[
           Association[
           "Configuration" -> {
             "LogisticRegression", "L1Regularization" -> 0, 
              "L2Regularization" -> 0, "OptimizationMethod" -> Automatic, 
              MaxIterations -> 30}, "ModelUtility" -> Missing[]], 
           TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
             TypeSystem`Tuple[{
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 
             TypeSystem`UnknownType}], 
           Association[]], "InputDimension" -> 1, "OutputDimension" -> 1], 
       "AnomalyDetector" -> None, "Log" -> 
       Association["Example" -> MachineLearning`MLDataset[
           Association[
           "f1" -> Association[
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {8}, "ID" -> 
              3172789942831070546]], 
           Association[
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
            0, "RawExample" -> False]], "TrainingTime" -> 0.30983, 
         "MaxTrainingMemory" -> 263720, "DataMemory" -> 584, "FunctionMemory" -> 
         99784, "LanguageVersion" -> {12.3, 0}, "Date" -> 
         DateObject[{2021, 8, 5, 15, 46, 34.2387126`9.287092322953962}, 
           "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "Windows", 
         "SystemWordLength" -> 64, "Evaluations" -> {}]]], "TestSet" -> 
    Association["Input" -> {
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[]}, 
      "Output" -> {
       "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", 
        "ITA", "ITA", "SoTA", "ITA", "BA", "SyTA", "BA", "ITA", "BA", "ITA", 
        "ITA", "ITA", "ITA", "ITA", "BA", "ITA", "ITA", "BA", "ITA", "BA", 
        "BA", "ITA", "BA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "BA", 
        "ITA", "ITA", "ITA", "ITA", "ITA", "BA", "BA", "ITA", "SoTA", "ITA", 
        "BA", "ITA", "ITA", "ITA", "ITA"}], 
    "Predictions" -> {
     "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", 
      "ITA", "ITA", "ITA", "ITA", "ITA", "SyTA", "ITA", "ITA", "ITA", "ITA", 
      "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", 
      "ITA", "BA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", 
      "ITA", "ITA", "BA", "ITA", "ITA", "BA", "BA", "ITA", "ITA", "ITA", "BA",
       "ITA", "ITA", "ITA", "ITA"}, "LogProbabilities" -> {{
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 0}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}}, 
    "CountMatrix" -> {{3, 9, 0, 0, 0}, {2, 38, 0, 0, 0}, {0, 2, 0, 0, 0}, {0, 
     0, 0, 1, 0}}, 
    "IndicesMatrix" -> {{{46, 47, 51}, {15, 17, 19, 25, 28, 30, 31, 33, 
       40}, {}, {}, {}}, {{32, 43}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
       14, 18, 20, 21, 22, 23, 24, 26, 27, 29, 34, 35, 36, 37, 38, 39, 41, 42,
        44, 45, 48, 50, 52, 53, 54, 55}, {}, {}, {}}, {{}, {13, 
       49}, {}, {}, {}}, {{}, {}, {}, {16}, {}}}, 
    "ExtendedClasses" -> {"BA", "ITA", "SoTA", "SyTA"}, "Weights" -> 
    SparseArray[Automatic, {55}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> Missing[], "SingleEvaluationTime" -> Missing[], 
    "Version" -> {12.3, 0}]]]], "Output",
 CellChangeTimes->{
  3.836907839255516*^9, 3.836992715586753*^9, 3.8369930687156305`*^9, 
   3.836993253769375*^9, 3.8369933972028184`*^9, 3.837079095108862*^9, 
   3.8370808201750765`*^9, 3.8371673811032333`*^9, 3.8371684850150895`*^9, 
   3.8371685412050877`*^9, 3.83716867463799*^9, {3.8371687323177843`*^9, 
   3.837168749122202*^9}, 3.8371815947764544`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"74ddac3a-d24e-467b-90c4-d83459f669eb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing on a subset of the dataset", "Section",
 CellChangeTimes->{{3.83690787392912*^9, 
  3.836907878940941*^9}},ExpressionUUID->"0624f65d-6e48-45ca-92d8-\
44d6bf95bc3f"],

Cell["Removing some features from the input/training dataset.", "Text",
 CellChangeTimes->{{3.83699273333246*^9, 3.836992755775176*^9}, {
  3.8369927900348344`*^9, 
  3.83699280056633*^9}},ExpressionUUID->"8b0c0852-4a60-412e-a55c-\
b09446b5826f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sInput", " ", "=", " ", 
   RowBox[{"KeyDrop", "[", 
    RowBox[{"train", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<id\>\"", ",", " ", "\"\<epoch\>\"", ",", " ", "\"\<date\>\"", ",", 
       " ", "\"\<logo\>\"", ",", " ", "\"\<timepast\>\"", ",", " ", 
       "\"\<title\>\"", ",", " ", "\"\<new\>\""}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.836907927645135*^9, 3.836907931961047*^9}, 
   3.837168700562279*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"e0585484-dea8-4b9b-b57e-7cb620e17a84"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sInput", " ", "=", " ", 
   RowBox[{"Dataset", "[", "sInput", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.836907940484017*^9, 3.8369079522064915`*^9}, 
   3.837168702601763*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"de53afe0-2984-46a8-a3ef-59ff5bed0195"],

Cell["Training the classifier", "Text",
 CellChangeTimes->{{3.8369927691709633`*^9, 
  3.8369927721095686`*^9}},ExpressionUUID->"d2aeb344-0811-44a8-84fc-\
b81636c3c41f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sClassifier", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"sInput", "->", "\"\<label\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8369079586831903`*^9, 3.8369079668967905`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"4ad6d16d-afd4-4792-9104-0cf458b6d734"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Text\"", ",", "\"Text\"", ",", "\"Text\"", ",",
                     "\"NominalSequence\"", ",", "\"Text\"", ",", "\"Text\"", 
                    ",", "\"Text\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Text", "Text", "Text", "NominalSequence", "Text", 
                    "Text", "Text"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["7", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Business Analyst\"", ",", 
                    "\"Database Technical Architect\"", ",", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], ",",
                     "\"Software Technical Architect\"", ",", 
                    "\"System Technical Architect\""}], "}"}], 
                    Short[#, 1]& ]], Annotation[#, 
                    
                    Short[{"Business Analyst", "Database Technical Architect",
                     "Interface Technical Architect", "Miscellaneous", 
                    "Project Manager", "Software Technical Architect", 
                    "System Technical Architect"}, 1], "Tooltip"]& ], 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Text\"", ",", "\"Text\"", ",", "\"Text\"", ",",
                     "\"NominalSequence\"", ",", "\"Text\"", ",", "\"Text\"", 
                    ",", "\"Text\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Text", "Text", "Text", "NominalSequence", "Text", 
                    "Text", "Text"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["7", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Business Analyst\"", ",", 
                    "\"Database Technical Architect\"", ",", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], ",",
                     "\"Software Technical Architect\"", ",", 
                    "\"System Technical Architect\""}], "}"}], 
                    Short[#, 1]& ]], Annotation[#, 
                    
                    Short[{"Business Analyst", "Database Technical Architect",
                     "Interface Technical Architect", "Miscellaneous", 
                    "Project Manager", "Software Technical Architect", 
                    "System Technical Architect"}, 1], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"DecisionTree\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["220", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[ClassifierFunction, 9423536, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", ClassifierFunction, 9423536, 
            10355496453787542815527741953591306576940236590783786817024, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  BoxID -> 10355496453787542815527741953591306576940236590783786817024,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.836907969321562*^9, 3.836992779119555*^9, 3.836993085667354*^9, 
   3.8369932704536934`*^9, 3.8370791031440954`*^9, 3.837080824533841*^9, 
   3.8371673849343476`*^9, 3.837168488823304*^9, 3.8371685449103537`*^9, 
   3.8371686783064747`*^9, {3.837168735117902*^9, 3.837168752142971*^9}, 
   3.8371815988755584`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"9fa7dcc4-73d1-498c-9b23-fac1cf0d22eb"]
}, Open  ]],

Cell["Removing the same features from the test dataset.", "Text",
 CellChangeTimes->{{3.8369927867712564`*^9, 
  3.8369927988768854`*^9}},ExpressionUUID->"4c76625d-75fd-413c-b8f2-\
c6e851aa98c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sTest", " ", "=", " ", 
   RowBox[{"KeyDrop", "[", 
    RowBox[{"test", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<id\>\"", ",", " ", "\"\<epoch\>\"", ",", " ", "\"\<date\>\"", ",", 
       " ", "\"\<logo\>\"", ",", " ", "\"\<timepast\>\"", ",", " ", 
       "\"\<title\>\"", ",", " ", "\"\<new\>\"", ",", " ", "\"\<label\>\""}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8369080008461885`*^9, 3.836908016899412*^9}, 
   3.8371687055435343`*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"745d9bbd-fa5e-4e41-9984-981e47362196"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sTest", " ", "=", " ", 
   RowBox[{"Dataset", "[", "sTest", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8369080144940815`*^9, 3.8369080230963945`*^9}, 
   3.8371687082713675`*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"5f7dbeba-dc88-4884-803a-1988390c50ff"],

Cell["Running the new classifier on the \[OpenCurlyDoubleQuote]cleaned\
\[CloseCurlyDoubleQuote] data.", "Text",
 CellChangeTimes->{{3.8369928136077375`*^9, 
  3.8369928443975935`*^9}},ExpressionUUID->"2c016865-eaaf-41c2-a5ec-\
11eecf73b939"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testPrediction", " ", "=", " ", 
   RowBox[{"sClassifier", "[", "sTest", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8369080306064987`*^9, 3.8369080456698656`*^9}, 
   3.837168711455821*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"1958df19-1235-441c-9444-9f5c9ccf2962"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testPrediction", " ", "=", " ", 
  RowBox[{"StringReplace", "[", 
   RowBox[{"testPrediction", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
      "\"\<Interface Technical Architect\>\"", " ", "->", " ", 
       "\"\<ITA\>\""}], ",", " ", 
      RowBox[{"\"\<Business Analyst\>\"", " ", "->", " ", "\"\<BA\>\""}], ",",
       " ", 
      RowBox[{
      "\"\<System Technical Architect\>\"", " ", "->", " ", "\"\<SyTA\>\""}], 
      ",", " ", 
      RowBox[{
      "\"\<Software Technical Architect\>\"", " ", "->", " ", 
       "\"\<SoTA\>\""}], ",", " ", 
      RowBox[{"\"\<Project Manager\>\"", " ", "->", " ", "\"\<PM\>\""}], ",", 
      " ", 
      RowBox[{
      "\"\<Database Technical Architect\>\"", " ", "->", " ", "\"\<DTA\>\""}],
       ",", " ", 
      RowBox[{"\"\<Miscellaneous\>\"", " ", "->", " ", "\"\<Misc\>\""}]}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8369080655326395`*^9, 3.836908072517552*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"395cb6a2-4184-40b5-9388-1ce491e342af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"BA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"Misc\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"BA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"BA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"BA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"BA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"BA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"BA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"BA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"BA\"\>", ",", "\<\"Misc\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", ",", "\<\"ITA\"\>", 
   ",", "\<\"ITA\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8369080727703514`*^9, 3.836992851060555*^9, 3.836993103076272*^9, 
   3.836993293189246*^9, 3.8370791058589478`*^9, 3.837080826294321*^9, 
   3.83716738629185*^9, 3.837168490119516*^9, 3.8371685461793537`*^9, 
   3.837168679589458*^9, {3.8371687353843994`*^9, 3.8371687525472317`*^9}, 
   3.8371815995951824`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"cf31fd94-137b-4a32-bf4c-418ef0fae5c7"]
}, Open  ]],

Cell["Testing the accuracy of the classifier", "Text",
 CellChangeTimes->{{3.836992865350399*^9, 
  3.83699286942927*^9}},ExpressionUUID->"f86c2f9d-20bd-4838-a97a-\
7fc0eb1cba05"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{
  "testPrediction", ",", " ", "realOutput", ",", " ", "\"\<Accuracy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8369081122253857`*^9, 3.836908113824109*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"cd22fbc3-ba76-410b-9ee7-32e2acc34241"],

Cell[BoxData["0.7818181818181819`"], "Output",
 CellChangeTimes->{
  3.8369081142941446`*^9, 3.8369928532811537`*^9, 3.8369931068364625`*^9, 
   3.8369932959907675`*^9, 3.837079106534672*^9, 3.837080826775951*^9, 
   3.837167386622063*^9, 3.837168490435061*^9, 3.8371685465387897`*^9, 
   3.8371686799119396`*^9, {3.8371687356753817`*^9, 3.8371687528483057`*^9}, 
   3.8371816001019526`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"bb6c6fbb-7ee9-41f2-871a-b9025691ad2c"]
}, Open  ]],

Cell["Table that makes it easier to decipher the abbreviations.", "Text",
 CellChangeTimes->{{3.8369929023134527`*^9, 
  3.8369929149346933`*^9}},ExpressionUUID->"814a78ec-89da-4246-870c-\
3b31974df1fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Abbreviation\>\"", ",", " ", "Bold"}], "]"}], ",", 
       "\"\<ITA\>\"", ",", " ", "\"\<BA\>\"", ",", " ", "\"\<SyTA\>\"", ",", 
       " ", "\"\<SoTA\>\"", ",", " ", "\"\<PM\>\"", ",", " ", "\"\<DTA\>\"", 
       ",", " ", "\"\<Misc\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Job Label\>\"", ",", " ", "Bold"}], "]"}], ",", " ", 
       "\"\<Interface Technical Architect\>\"", ",", " ", 
       "\"\<Business Analyst\>\"", ",", " ", 
       "\"\<System Technical Architect\>\"", ",", " ", 
       "\"\<Software Technical Architect\>\"", ",", " ", 
       "\"\<Project Manager\>\"", ",", " ", 
       "\"\<Database Technical Architect\>\"", ",", " ", 
       "\"\<Miscellaneous\>\""}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"Frame", " ", "->", " ", "All"}], ",", " ", 
   RowBox[{"Alignment", "\[Rule]", "Center"}], ",", " ", 
   RowBox[{"Background", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "LightGray", "}"}], ",", " ", "None"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.836908516954632*^9, 3.8369087303278184`*^9}, {
  3.8369087638495073`*^9, 3.8369087778441873`*^9}, {3.8369089037031417`*^9, 
  3.8369089184062567`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"01e7e587-a6df-4077-9236-2b44457ac8f5"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Abbreviation\"\>",
      StripOnInput->False,
      FontWeight->
       Bold], "\<\"ITA\"\>", "\<\"BA\"\>", "\<\"SyTA\"\>", "\<\"SoTA\"\>", \
"\<\"PM\"\>", "\<\"DTA\"\>", "\<\"Misc\"\>"},
    {
     StyleBox["\<\"Job Label\"\>",
      StripOnInput->False,
      FontWeight->
       Bold], "\<\"Interface Technical Architect\"\>", "\<\"Business \
Analyst\"\>", "\<\"System Technical Architect\"\>", "\<\"Software Technical \
Architect\"\>", "\<\"Project Manager\"\>", "\<\"Database Technical \
Architect\"\>", "\<\"Miscellaneous\"\>"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       GrayLevel[0.85]}, "Rows" -> {{None}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8369086518411674`*^9, {3.836908690746914*^9, 3.836908730612217*^9}, {
   3.836908771251471*^9, 3.8369087783837147`*^9}, {3.8369089149369793`*^9, 
   3.8369089186886663`*^9}, 3.836992891613943*^9, 3.8369931106978374`*^9, 
   3.8369933182975464`*^9, 3.837079106783243*^9, 3.8370808269045644`*^9, 
   3.837167386723078*^9, 3.8371684905379667`*^9, 3.837168546643132*^9, 
   3.8371686800150156`*^9, {3.8371687357671223`*^9, 3.8371687529472976`*^9}, 
   3.8371816004424944`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"8bde9647-d928-4cb3-857f-6f657f0e213e"]
}, Open  ]],

Cell["Confusion matrix of the new classifier.", "Text",
 CellChangeTimes->{{3.836992929547719*^9, 
  3.8369929354666777`*^9}},ExpressionUUID->"0ac647a2-6298-47ef-874b-\
ffab840aa18f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"testPrediction", ",", " ", "realOutput"}], "]"}]], "Input",
 CellChangeTimes->{{3.8369933760971117`*^9, 3.836993376770915*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"97c9d17d-f4f4-48a8-bdf2-f4fef9b1e60a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Number of test examples"], 
                   TextCell["Number of test examples"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], "55"},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Accuracy"], 
                   TextCell["Accuracy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 RowBox[{"(", 
                   InterpretationBox[
                    
                    TemplateBox[{"78.", "6."}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    78.1818181818181869858`3., 5.6203748457549895789`3.]], 
                   ")"}], "\"%\"", "percent", "\"Percent\""},
                "QuantityPostfix"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                    "\"Accuracy if predicting the commonest class\"", 
                    LabelStyle -> "TextStyling"], 
                   Annotation[#, "Accuracy if predicting the commonest class",
                     "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 RowBox[{"(", 
                   InterpretationBox[
                    
                    TemplateBox[{"73.", "6."}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    72.7272727272727337322`3., 6.0606060606060765394`3.]], 
                   ")"}], "\"%\"", "percent", "\"Percent\""},
                "QuantityPostfix"]},
              {
               ItemBox[
                GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBghWIQGwI+2KPTR6K1Vy23fGd/NsK1olD0rT0Dc6r74mUv
MNRRmw4tWe+36cJb+6VrnESudry25+3TOc4y/wnN7aU1/bzH+POe9Lf2NQwO
Gyz+vLSXkvziljb9AVz+YZXIOveHt6B8GKDc3iJjjzzt5Df2ucv7mb2WPLVv
1du6i6/snL1NhInux09v7PnmiqmzSb6w9+V56fTm8Q2qhT8AwouLJA==
                  "], {{0, 0}, {5, 5}}, {0, 1}],
                 Epilog->{{
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["6", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "6", "\" examples of \"", "\"BA\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.6666666666666666`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.5`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.5714285714285714`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{6, " examples of ", "BA", " correctly classified"}], 
                    Row[{"Precision = ", 0.6666666666666666}], 
                    Row[{"Recall = ", 0.5}], 
                    Row[{"FScore = ", 0.5714285714285714}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "3", "\" examples of \"", "\"ITA\"", 
                    "\" misclassified as \"", "\"BA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.3333333333333333`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.075`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{3, " examples of ", "ITA", " misclassified as ", 
                    "BA"}], 
                    Row[{"Column fraction = ", 0.3333333333333333}], 
                    Row[{"Row fraction = ", 0.075}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"Misc\"", 
                    "\" misclassified as \"", "\"BA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "Misc", " misclassified as ", 
                    "BA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"SoTA\"", 
                    "\" misclassified as \"", "\"BA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "SoTA", " misclassified as ", 
                    "BA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"SyTA\"", 
                    "\" misclassified as \"", "\"BA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "SyTA", " misclassified as ", 
                    "BA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4", "\" examples of \"", "\"BA\"", 
                    "\" misclassified as \"", "\"ITA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.09090909090909091`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.3333333333333333`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{4, " examples of ", "BA", " misclassified as ", 
                    "ITA"}], 
                    Row[{"Column fraction = ", 0.09090909090909091}], 
                    Row[{"Row fraction = ", 0.3333333333333333}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["37", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "37", "\" examples of \"", "\"ITA\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8409090909090909`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.925`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.8809523809523809`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{37, " examples of ", "ITA", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.8409090909090909}], 
                    Row[{"Recall = ", 0.925}], 
                    Row[{"FScore = ", 0.8809523809523809}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"Misc\"", 
                    "\" misclassified as \"", "\"ITA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "Misc", " misclassified as ", 
                    "ITA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "\"SoTA\"", 
                    "\" misclassified as \"", "\"ITA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.045454545454545456`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "1.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{2, " examples of ", "SoTA", " misclassified as ", 
                    "ITA"}], 
                    Row[{"Column fraction = ", 0.045454545454545456`}], 
                    Row[{"Row fraction = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"SyTA\"", 
                    "\" misclassified as \"", "\"ITA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.022727272727272728`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "1.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "SyTA", " misclassified as ", 
                    "ITA"}], 
                    Row[{"Column fraction = ", 0.022727272727272728`}], 
                    Row[{"Row fraction = ", 1.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "\"BA\"", 
                    "\" misclassified as \"", "\"Misc\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "1.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.16666666666666666`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{2, " examples of ", "BA", " misclassified as ", 
                    "Misc"}], 
                    Row[{"Column fraction = ", 1.}], 
                    Row[{"Row fraction = ", 0.16666666666666666`}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"ITA\"", 
                    "\" misclassified as \"", "\"Misc\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "ITA", " misclassified as ", 
                    "Misc"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"Misc\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "0.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", "Misc", " correctly classified"}], 
                    Row[{"Precision = ", 0.}], 
                    Row[{"Recall = ", 0.}], 
                    Row[{"FScore = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"SoTA\"", 
                    "\" misclassified as \"", "\"Misc\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "SoTA", " misclassified as ", 
                    "Misc"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"SyTA\"", 
                    "\" misclassified as \"", "\"Misc\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "SyTA", " misclassified as ", 
                    "Misc"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"BA\"", 
                    "\" misclassified as \"", "\"SoTA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "BA", " misclassified as ", 
                    "SoTA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"ITA\"", 
                    "\" misclassified as \"", "\"SoTA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "ITA", " misclassified as ", 
                    "SoTA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"Misc\"", 
                    "\" misclassified as \"", "\"SoTA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "Misc", " misclassified as ", 
                    "SoTA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"SoTA\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "0.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", "SoTA", " correctly classified"}], 
                    Row[{"Precision = ", 0.}], 
                    Row[{"Recall = ", 0.}], 
                    Row[{"FScore = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"SyTA\"", 
                    "\" misclassified as \"", "\"SoTA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "SyTA", " misclassified as ", 
                    "SoTA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"BA\"", 
                    "\" misclassified as \"", "\"SyTA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "BA", " misclassified as ", 
                    "SyTA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"ITA\"", 
                    "\" misclassified as \"", "\"SyTA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "ITA", " misclassified as ", 
                    "SyTA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    "0", "\" example of \"", "\"Misc\"", 
                    "\" misclassified as \"", "\"SyTA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "Misc", " misclassified as ", 
                    "SyTA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"SoTA\"", 
                    "\" misclassified as \"", "\"SyTA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "SoTA", " misclassified as ", 
                    "SyTA"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"SyTA\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "0.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", "SyTA", " correctly classified"}], 
                    Row[{"Precision = ", 0.}], 
                    Row[{"Recall = ", 0.}], 
                    Row[{"FScore = ", 0.}]}], "Tooltip"]& ]}, 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 4.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "12", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"BA\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.5`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{12, " example", "s", " of class ", "BA"}], 
                    Row[{"Recall = ", 0.5}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "40", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"ITA\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.925`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{40, " example", "s", " of class ", "ITA"}], 
                    Row[{"Recall = ", 0.925}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example\"", "\"\"", "\" of class \"", 
                    "\"Misc\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example", "", " of class ", "Misc"}], 
                    Row[{"Recall = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"SoTA\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " example", "s", " of class ", "SoTA"}], 
                    Row[{"Recall = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example\"", "\"\"", "\" of class \"", 
                    "\"SyTA\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example", "", " of class ", "SyTA"}], 
                    Row[{"Recall = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "9", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"BA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.6666666666666666`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{9, " example", "s", " classified as ", "BA"}], 
                    Row[{"Precision = ", 0.6666666666666666}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "44", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"ITA\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8409090909090909`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{44, " example", "s", " classified as ", "ITA"}], 
                    Row[{"Precision = ", 0.8409090909090909}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    "2", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"Misc\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " example", "s", " classified as ", "Misc"}], 
                    Row[{"Precision = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example\"", "\"\"", "\" classified as \"", 
                    "\"SoTA\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example", "", " classified as ", "SoTA"}], 
                    Row[{"Precision = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example\"", "\"\"", "\" classified as \"", 
                    "\"SyTA\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example", "", " classified as ", "SyTA"}], 
                    Row[{"Precision = ", 0.}]}], "Tooltip"]& ]},
                 Frame->True,
                 FrameLabel->{
                   FormBox["\"predicted class\"", TraditionalForm], 
                   FormBox["\"actual class\"", TraditionalForm]},
                 FrameTicks->{{{{4.5, 
                    FormBox[
                    RotationBox["\"BA\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["\"ITA\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["\"Misc\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["\"SoTA\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {0.5, 
                    FormBox[
                    RotationBox["\"SyTA\"", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{4.5, 
                    FormBox["12", TraditionalForm]}, {3.5, 
                    FormBox["40", TraditionalForm]}, {2.5, 
                    FormBox["0", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {0.5, 
                    FormBox["1", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["9", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["44", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["2", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["0", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {4.5, 
                    FormBox[
                    RotationBox["0", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox["\"BA\"", BoxRotation -> 1.5707963267948966`],
                     TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox[
                    "\"ITA\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox[
                    "\"Misc\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox[
                    "\"SoTA\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {4.5, 
                    FormBox[
                    RotationBox[
                    "\"SyTA\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                 FrameTicksStyle->13,
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.4]],
                 ImageSize->228.,
                 
                 Method->{
                  "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                   Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                 PlotRangePadding->None],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
           NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  ClassifierMeasurementsObject[
   Association["Model" -> ClassifierFunction[
      Association[
      "ExampleNumber" -> 10, "ClassNumber" -> 5, "Input" -> 
       Association[
        "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
           Association[
           "Input" -> Association["f1" -> Association["Type" -> "Numerical"]],
             "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
            "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
              Association["Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor["WrapMLDataset", 
                  Association[
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False]]}]], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"]], "Processor" -> 
         MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
            "Output" -> 
            Association[
             "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]],
             "Processors" -> {
              MachineLearning`MLProcessor["SynthesizeMissingValues", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                "StructurePreserving" -> True, "Input" -> 
                Association[
                 "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
                "Distribution" -> LearnedDistribution[
                  Association[
                  "ExampleNumber" -> 10, "Preprocessor" -> 
                   MachineLearning`MLProcessor["ToMLDataset", 
                    Association[
                    "Input" -> 
                    Association["f1" -> Association["Type" -> "Numerical"]], 
                    "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1]], "Preprocessor" -> 
                    MachineLearning`MLProcessor["Identity"], "ScalarFeature" -> 
                    True, "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    False, "Missing" -> "Allowed"]], "Processor" -> 
                   MachineLearning`MLProcessor["ToVector", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Version" -> {12.3, 0}, "ID" -> 2729918768343498454]], 
                   "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                   Automatic, "Model" -> 
                   Association[
                    "RotationMatrix" -> {{1.}}, 
                    "Precisions" -> {0.12121212121212122`}, "NoisePrecision" -> 
                    None, "Processor" -> MachineLearning`MLProcessor["Center", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {5.5}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Version" -> {12.3, 0}, "ID" -> 8531610250295662676]], 
                    "PostProcessor" -> 
                    MachineLearning`MLProcessor["FirstValues", 
                    Association[
                    "Info" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1], "Key" -> 
                    "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    False, "Missing" -> "Allowed"]], "Method" -> 
                    "Multinormal", "Options" -> 
                    Association[
                    "CovarianceType" -> 
                    Association[
                    "Value" -> "Full", "Options" -> Association[]], 
                    "IntrinsicDimension" -> 
                    Association["Value" -> 1, "Options" -> Association[]]]], 
                   "TrainingInformation" -> 
                   Association["Configurations" -> Dataset[
                    Association[
                    Association[
                    "Value" -> "Multinormal", "Options" -> 
                    Association[
                    "CovarianceType" -> Association["Value" -> "Full"], 
                    "IntrinsicDimension" -> 
                    Association["Value" -> "Heuristic"]], "NaiveImputer" -> 
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {5.5}, 
                    "StandardDeviation" -> {2.8722813232690143`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector", "Version" -> {12.3, 0}, "ID" -> 
                    3124670018105563885]], "EMIterations" -> 1] -> 
                    Association[]], 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], 
                    Association[]], "BestModelInformation" -> Dataset[
                    Association[
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]], 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], 
                    Association[]]], "NaiveImputer" -> 
                   MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {5.5}, 
                    "StandardDeviation" -> {2.8722813232690143`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector", "Version" -> {12.3, 0}, "ID" -> 
                    3124670018105563885]], "InputDimension" -> 0, 
                   "OutputDimension" -> 1, "Log" -> 
                   Association["Example" -> MachineLearning`MLDataset[
                    Association[
                    "f1" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {10}, 
                    "ID" -> 4096411152747321565]], 
                    Association[
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False]], 
                    "TrainingTime" -> 0.1303805, "MaxTrainingMemory" -> 
                    167472, "DataMemory" -> 1952, "FunctionMemory" -> 31608, 
                    "LanguageVersion" -> {12.3, 0}, "Date" -> 
                    DateObject[{
                    2021, 8, 5, 15, 46, 40.7177461`9.362358610010649}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "Windows", "SystemWordLength" -> 64, "Evaluations" -> {}],
                    "LogPDFDistribution" -> 
                   MachineLearning`TailedQuantileDistribution[
                    Association[
                    "Quantiles" -> {-3.0106149061050913`, \
-3.0106149061050913`, -2.487040423065937, -2.417394339467768, \
-2.145184583129549, -2.1317911770309728`, -2.094479881505164, \
-1.9945557498433484`, -1.9861288852559966`, -1.9848142400740147`, \
-1.9741126852275568`}, "LeftBoundary" -> -2.487040423065937, "LeftScale" -> 
                    0.2617872415195772, "LeftTailNorm" -> 0.2]], "Entropy" -> 
                   Around[2.22261168707054, 0.10465318374641495`], 
                   "EntropySampleSize" -> 10]], "Output" -> 
                Association[
                 "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
                "EvaluationStrategy" -> "ModeFinding", "Version" -> {12.3, 0},
                 "ID" -> 895810465636885430]], 
              MachineLearning`MLProcessor["ToVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, "Input" -> 
                Association[
                 "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
                "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Version" -> {12.3, 0}, "ID" -> 1315539196371995972]], 
              MachineLearning`MLProcessor["Standardize", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Mean" -> {5.5}, "StandardDeviation" -> {2.8722813232690143`},
                 "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Version" -> {12.3, 0}, "ID" -> 8587321254497897969]]}, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
            "Missing" -> "Imputed"]]], "Output" -> 
       Association[
        "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
           Association[
           "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
            "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
            "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
              Association["Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor["WrapMLDataset", 
                  Association[
                  "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False]]}]], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"]], "Processor" -> 
         MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
            "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
            "Processors" -> {
              MachineLearning`MLProcessor["ToVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, "Input" -> 
                Association[
                 "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NominalVector", "Weight" -> 1]], 
                "Version" -> {12.3, 0}, "ID" -> 2886196550494335253]], 
              MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NominalVector", "Weight" -> 1]], "Index" -> {
                  Association[
                  "BA" -> 1, "ITA" -> 2, "Misc" -> 3, "SoTA" -> 4, "SyTA" -> 
                   5]}, "MissingCode" -> 0, "Version" -> {12.3, 0}, "ID" -> 
                2624103930176666827, "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NominalVector", "Weight" -> 1]]]], 
              MachineLearning`MLProcessor["FromVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NominalVector", "Weight" -> 1, 
                    "SetSize" -> {5}]], "Output" -> 
                Association[
                 "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                "Version" -> {12.3, 0}, "ID" -> 4047776997762384043]], 
              MachineLearning`MLProcessor["FirstValues", 
               Association[
               "Info" -> Association[
                 "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 5], "Key" -> 
                "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                False, "Missing" -> "Allowed"]]}, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"]], "ProbabilityPostprocessor" -> Identity, "Name" -> 
         "class", "Marginal" -> 
         Association[
          "BA" -> 0.2, "ITA" -> 0.2, "Misc" -> 0.2, "SoTA" -> 0.2, "SyTA" -> 
           0.2]], "LabelSplitter" -> 
       MachineLearning`MLProcessor["FeatureLabelSplit", 
         Association[
         "Processor" -> MachineLearning`MLProcessor["RuleSplit"], 
          "PreferLabeled" -> True, "KeepLabelsFormat" -> False]], 
       "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
       "Prior" -> Automatic, "Utility" -> 
       SparseArray[
        Automatic, {5, 6}, 0., {
         1, {{0, 1, 2, 3, 4, 5}, {{2}, {3}, {4}, {5}, {6}}}, {1., 1., 1., 1., 
          1.}}], "Threshold" -> 0, "TieBreaker" -> RandomChoice, 
       "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> Automatic, 
       "Model" -> Association["LogProbabilitiesFunction" -> LinearLayer[
           Association[
           "Type" -> "Linear", "Arrays" -> 
            Association[
             "Weights" -> 
              RawArray[
                "Real32",{{-1.2873680591583252`}, {-1.7515913248062134`}, \
{-0.8678431510925293}, {-0.4800395369529724}}], "Biases" -> 
              RawArray["Real32",{0.24995353817939758`, 0.004533722065389156, 
                0.32291436195373535`, 0.2535424828529358}]], "Parameters" -> 
            Association[
             "OutputDimensions" -> {4}, "$OutputSize" -> 4, "$InputSize" -> 1,
               "$InputDimensions" -> {1}], "Inputs" -> 
            Association[
             "Input" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]], 
            "Outputs" -> 
            Association[
             "Output" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
           Association["Version" -> "12.3.2", "Unstable" -> False]], 
         "Processor" -> MachineLearning`MLProcessor["FirstValues", 
           Association[
           "Info" -> Association["Weight" -> 1, "Type" -> "NumericalVector"], 
            "Key" -> "f1", "Invertibility" -> "Perfect", 
            "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
         "Calibrator" -> None, "Method" -> Missing[], "PostProcessor" -> 
         MachineLearning`MLProcessor["Identity"], "Options" -> 
         Association[
          "L1Regularization" -> 
           Association["Value" -> 0, "Options" -> Association[]], 
           "L2Regularization" -> 
           Association["Value" -> 0, "Options" -> Association[]], 
           "OptimizationMethod" -> 
           Association["Value" -> "LBFGS", "Options" -> Association[]], 
           MaxIterations -> 
           Association["Value" -> 30, "Options" -> Association[]]]], 
       "TrainingInformation" -> Association["Configurations" -> Dataset[
           Association[
           Association[
             "Value" -> "LogisticRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]], "NaiveImputer" -> 
              Missing["KeyAbsent", "NaiveImputer"], "EMIterations" -> 
              Missing["KeyAbsent", "EMIterations"]] -> Association[]], 
           TypeSystem`Assoc[
            
            TypeSystem`Struct[{
             "Value", "Options", "NaiveImputer", "EMIterations"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4], 
              TypeSystem`UnknownType, TypeSystem`UnknownType}], 
            TypeSystem`Assoc[
            TypeSystem`UnknownType, TypeSystem`UnknownType, 
             TypeSystem`AnyLength], 1], 
           Association[]], "BestModelInformation" -> Dataset[
           Association[
           "Configuration" -> {
             "LogisticRegression", "L1Regularization" -> 0, 
              "L2Regularization" -> 0, "OptimizationMethod" -> Automatic, 
              MaxIterations -> 30}, "ModelUtility" -> Missing[]], 
           TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
             TypeSystem`Tuple[{
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 
             TypeSystem`UnknownType}], 
           Association[]], "InputDimension" -> 1, "OutputDimension" -> 1], 
       "AnomalyDetector" -> None, "Log" -> 
       Association["Example" -> MachineLearning`MLDataset[
           Association[
           "f1" -> Association[
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {10}, "ID" -> 
              4147006189882119467]], 
           Association[
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
            0, "RawExample" -> False]], "TrainingTime" -> 0.2629449, 
         "MaxTrainingMemory" -> 263632, "DataMemory" -> 728, "FunctionMemory" -> 
         99816, "LanguageVersion" -> {12.3, 0}, "Date" -> 
         DateObject[{2021, 8, 5, 15, 46, 40.8385329`9.363645011982971}, 
           "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "Windows", 
         "SystemWordLength" -> 64, "Evaluations" -> {}]]], "TestSet" -> 
    Association["Input" -> {
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[]}, 
      "Output" -> {
       "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", 
        "ITA", "ITA", "SoTA", "ITA", "BA", "SyTA", "BA", "ITA", "BA", "ITA", 
        "ITA", "ITA", "ITA", "ITA", "BA", "ITA", "ITA", "BA", "ITA", "BA", 
        "BA", "ITA", "BA", "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "BA", 
        "ITA", "ITA", "ITA", "ITA", "ITA", "BA", "BA", "ITA", "SoTA", "ITA", 
        "BA", "ITA", "ITA", "ITA", "ITA"}], 
    "Predictions" -> {
     "ITA", "ITA", "ITA", "ITA", "ITA", "BA", "ITA", "ITA", "ITA", "ITA", 
      "ITA", "ITA", "ITA", "ITA", "Misc", "ITA", "BA", "ITA", "ITA", "BA", 
      "ITA", "ITA", "ITA", "ITA", "BA", "ITA", "ITA", "BA", "ITA", "BA", 
      "ITA", "ITA", "ITA", "ITA", "ITA", "ITA", "BA", "ITA", "ITA", "BA", 
      "ITA", "ITA", "ITA", "ITA", "ITA", "BA", "Misc", "ITA", "ITA", "ITA", 
      "ITA", "ITA", "ITA", "ITA", "ITA"}, "LogProbabilities" -> {{
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}, {
       DirectedInfinity[-1], 0, 
       DirectedInfinity[-1], 
       DirectedInfinity[-1], 
       DirectedInfinity[-1]}}, 
    "CountMatrix" -> {{6, 4, 2, 0, 0, 0}, {3, 37, 0, 0, 0, 0}, {0, 0, 0, 0, 0,
      0}, {0, 2, 0, 0, 0, 0}, {0, 1, 0, 0, 0, 0}}, 
    "IndicesMatrix" -> {{{17, 25, 28, 30, 40, 46}, {19, 31, 33, 51}, {15, 
       47}, {}, {}, {}}, {{6, 20, 37}, {1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 
       14, 18, 21, 22, 23, 24, 26, 27, 29, 32, 34, 35, 36, 38, 39, 41, 42, 43,
        44, 45, 48, 50, 52, 53, 54, 
       55}, {}, {}, {}, {}}, {{}, {}, {}, {}, {}, {}}, {{}, {13, 
       49}, {}, {}, {}, {}}, {{}, {16}, {}, {}, {}, {}}}, 
    "ExtendedClasses" -> {"BA", "ITA", "Misc", "SoTA", "SyTA"}, "Weights" -> 
    SparseArray[Automatic, {55}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> Missing[], "SingleEvaluationTime" -> Missing[], 
    "Version" -> {12.3, 0}]]]], "Output",
 CellChangeTimes->{
  3.8369933776735067`*^9, 3.837079107551427*^9, 3.837080827511135*^9, 
   3.837167387146282*^9, 3.8371684909318666`*^9, 3.837168547065123*^9, 
   3.837168680409177*^9, {3.8371687361614027`*^9, 3.837168753421399*^9}, 
   3.837181601056058*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"233b1e7e-db99-4755-94e0-79f94af9611b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960., 538.75},
WindowMargins->{{-4.5, Automatic}, {Automatic, -4.5}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (May 13, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"49e0292c-59ba-43c3-94e9-b4a141c0ef99"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 178, 3, 98, "Title",ExpressionUUID->"f741e553-f188-4257-8df3-28585140145e"],
Cell[CellGroupData[{
Cell[786, 29, 262, 4, 67, "Section",ExpressionUUID->"df0c7c3b-80b9-45cf-ae5a-6477999db1d5"],
Cell[1051, 35, 459, 8, 58, "Text",ExpressionUUID->"069c75fa-e362-43d7-8393-d1c337502471"],
Cell[CellGroupData[{
Cell[1535, 47, 907, 19, 89, "Input",ExpressionUUID->"1a34124c-4d56-48f9-9f2c-af508d16f674"],
Cell[2445, 68, 10423, 259, 174, "Output",ExpressionUUID->"77698085-93ea-48d0-8fd9-e2ce49d5534b"]
}, Open  ]],
Cell[12883, 330, 179, 3, 35, "Text",ExpressionUUID->"a93a4917-a070-49f5-aaa9-feed77ee8770"],
Cell[13065, 335, 440, 9, 28, "Input",ExpressionUUID->"51fec692-7406-4db8-97a9-66e6efe95156"],
Cell[13508, 346, 190, 3, 35, "Text",ExpressionUUID->"fcbc0fac-681f-4bb8-be8c-c11f9704d47f"],
Cell[13701, 351, 617, 17, 28, "Input",ExpressionUUID->"3b4de588-384b-456a-a507-40d43be1e55f"],
Cell[14321, 370, 251, 5, 35, "Text",ExpressionUUID->"85690d58-748d-48ed-af69-695693a8ca5a"],
Cell[CellGroupData[{
Cell[14597, 379, 224, 3, 28, "Input",ExpressionUUID->"247f7d12-c552-4466-9f5a-fb4daba187d1"],
Cell[14824, 384, 764, 14, 52, "Output",ExpressionUUID->"2292662d-d492-4063-a47d-40049b990e12"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15637, 404, 260, 4, 67, "Section",ExpressionUUID->"06f78f3c-668b-42e1-815e-0d9c3b3858db"],
Cell[15900, 410, 271, 6, 35, "Text",ExpressionUUID->"a5f10cf8-598e-4795-acec-20f5c5905f06"],
Cell[CellGroupData[{
Cell[16196, 420, 680, 14, 28, "Input",ExpressionUUID->"ee1cb0dc-300d-4a5f-addb-1428fe12988a"],
Cell[16879, 436, 10656, 264, 174, "Output",ExpressionUUID->"cbefa086-2303-4070-a493-0c4c7951830d"]
}, Open  ]],
Cell[27550, 703, 196, 3, 35, "Text",ExpressionUUID->"b6e5acce-9712-4d18-b57b-37b8243732bf"],
Cell[CellGroupData[{
Cell[27771, 710, 340, 7, 28, "Input",ExpressionUUID->"b474431c-b462-407d-a020-2473d03d78e6"],
Cell[28114, 719, 667, 10, 32, "Output",ExpressionUUID->"9d68b3b0-c0a2-44a7-a444-9c413cbbbb36"]
}, Open  ]],
Cell[28796, 732, 187, 3, 35, "Text",ExpressionUUID->"96978f16-0964-4656-9c69-af14a31c8481"],
Cell[CellGroupData[{
Cell[29008, 739, 227, 4, 28, "Input",ExpressionUUID->"6527e436-d447-4f0f-8133-1dfba9f7cda0"],
Cell[29238, 745, 2938, 51, 280, "Output",ExpressionUUID->"9e8b337d-5148-4963-ae40-a4a36cb98608"]
}, Open  ]],
Cell[32191, 799, 186, 3, 35, "Text",ExpressionUUID->"433effff-ded9-43c4-9ce6-3792d0609eb2"],
Cell[CellGroupData[{
Cell[32402, 806, 279, 5, 28, "Input",ExpressionUUID->"2a05c77e-b710-487e-844d-2c17862b77e8"],
Cell[32684, 813, 1888, 36, 109, "Output",ExpressionUUID->"f9f9e224-e0f4-40ac-ab9e-dc34603cc27c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34621, 855, 175, 3, 67, "Section",ExpressionUUID->"43b1845c-100c-4c46-ad1e-11ccd2f13eef"],
Cell[34799, 860, 238, 6, 35, "Text",ExpressionUUID->"c8239145-265c-4ae3-b17b-90a4695f66a7"],
Cell[CellGroupData[{
Cell[35062, 870, 340, 7, 28, "Input",ExpressionUUID->"ba9329a3-19ff-4dda-92b4-f746ccda13cd"],
Cell[35405, 879, 10406, 258, 174, "Output",ExpressionUUID->"71c93a4c-78a8-410d-a21f-3c7365f5fb5c"]
}, Open  ]],
Cell[45826, 1140, 191, 3, 35, "Text",ExpressionUUID->"e1796e67-d593-457c-9bbc-d96bc656e66d"],
Cell[46020, 1145, 293, 6, 28, "Input",ExpressionUUID->"3eb7af07-f875-482c-bc88-9812a2d87064"],
Cell[46316, 1153, 454, 9, 58, "Text",ExpressionUUID->"207c2ed1-3145-421b-862b-d6bff6a41055"],
Cell[CellGroupData[{
Cell[46795, 1166, 301, 5, 28, "Input",ExpressionUUID->"5f0f9d07-3454-44ce-9818-f1c138acd1ee"],
Cell[47099, 1173, 15034, 298, 88, "Output",ExpressionUUID->"d0678557-5c5a-433b-ab41-579eb97089ed"]
}, Open  ]],
Cell[62148, 1474, 292, 6, 35, "Text",ExpressionUUID->"95389416-6172-4a39-a4a6-c6981806e1dc"],
Cell[62443, 1482, 364, 8, 28, "Input",ExpressionUUID->"05fc0a16-6fcc-463c-a2d5-ee2b9ce455d9"],
Cell[62810, 1492, 301, 6, 28, "Input",ExpressionUUID->"8785d141-7bc9-4243-be73-98c97b2fca04"],
Cell[63114, 1500, 185, 3, 35, "Text",ExpressionUUID->"8ff40017-2997-40ce-af39-1ddc8b960f86"],
Cell[63302, 1505, 301, 6, 28, "Input",ExpressionUUID->"581d2d36-ebda-4468-bc01-e76f149d396b"],
Cell[63606, 1513, 205, 3, 35, "Text",ExpressionUUID->"02a422bf-10a2-4a2b-a379-126295297dd6"],
Cell[63814, 1518, 610, 17, 28, "Input",ExpressionUUID->"cac67f45-6966-43bd-a854-f452647911ee"],
Cell[64427, 1537, 225, 5, 35, "Text",ExpressionUUID->"38d272f8-c743-4106-b203-b5be781f91df"],
Cell[CellGroupData[{
Cell[64677, 1546, 1043, 25, 86, "Input",ExpressionUUID->"613a0ed1-2d2e-47ea-be99-e044411b5262"],
Cell[65723, 1573, 1640, 27, 71, "Output",ExpressionUUID->"20f9714e-835b-435a-aad0-1012663a812a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67400, 1605, 1046, 25, 86, "Input",ExpressionUUID->"ea4637d1-8c28-4685-8ac4-6a4fa7c55f1a"],
Cell[68449, 1632, 1629, 27, 71, "Output",ExpressionUUID->"530d73ea-7aa8-4bb7-baf7-efdc2654b49e"]
}, Open  ]],
Cell[70093, 1662, 251, 6, 35, "Text",ExpressionUUID->"f04d91bf-7ea5-4a32-b749-08b4e5a9d9cf"],
Cell[CellGroupData[{
Cell[70369, 1672, 308, 6, 28, "Input",ExpressionUUID->"5aa6f70a-e0ed-477f-afd1-1c9460a47928"],
Cell[70680, 1680, 491, 6, 32, "Output",ExpressionUUID->"48526cb2-8be6-4fe9-8610-7e8ff236d302"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71208, 1691, 328, 5, 28, "Input",ExpressionUUID->"92946865-3b2b-46cf-af77-1fab195a959c"],
Cell[71539, 1698, 69963, 1562, 361, "Output",ExpressionUUID->"74ddac3a-d24e-467b-90c4-d83459f669eb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[141551, 3266, 178, 3, 67, "Section",ExpressionUUID->"0624f65d-6e48-45ca-92d8-44d6bf95bc3f"],
Cell[141732, 3271, 246, 4, 35, "Text",ExpressionUUID->"8b0c0852-4a60-412e-a55c-b09446b5826f"],
Cell[141981, 3277, 561, 13, 28, "Input",ExpressionUUID->"e0585484-dea8-4b9b-b57e-7cb620e17a84"],
Cell[142545, 3292, 295, 6, 28, "Input",ExpressionUUID->"de53afe0-2984-46a8-a3ef-59ff5bed0195"],
Cell[142843, 3300, 169, 3, 35, "Text",ExpressionUUID->"d2aeb344-0811-44a8-84fc-b81636c3c41f"],
Cell[CellGroupData[{
Cell[143037, 3307, 295, 5, 28, "Input",ExpressionUUID->"4ad6d16d-afd4-4792-9104-0cf458b6d734"],
Cell[143335, 3314, 14386, 288, 88, "Output",ExpressionUUID->"9fa7dcc4-73d1-498c-9b23-fac1cf0d22eb"]
}, Open  ]],
Cell[157736, 3605, 195, 3, 35, "Text",ExpressionUUID->"4c76625d-75fd-413c-b8f2-c6e851aa98c3"],
Cell[157934, 3610, 594, 13, 28, "Input",ExpressionUUID->"745d9bbd-fa5e-4e41-9984-981e47362196"],
Cell[158531, 3625, 297, 6, 28, "Input",ExpressionUUID->"5f7dbeba-dc88-4884-803a-1988390c50ff"],
Cell[158831, 3633, 242, 4, 35, "Text",ExpressionUUID->"2c016865-eaaf-41c2-a5ec-11eecf73b939"],
Cell[159076, 3639, 308, 6, 28, "Input",ExpressionUUID->"1958df19-1235-441c-9444-9f5c9ccf2962"],
Cell[CellGroupData[{
Cell[159409, 3649, 1051, 25, 86, "Input",ExpressionUUID->"395cb6a2-4184-40b5-9388-1ce491e342af"],
Cell[160463, 3676, 1635, 27, 71, "Output",ExpressionUUID->"cf31fd94-137b-4a32-bf4c-418ef0fae5c7"]
}, Open  ]],
Cell[162113, 3706, 179, 3, 35, "Text",ExpressionUUID->"f86c2f9d-20bd-4838-a97a-7fc0eb1cba05"],
Cell[CellGroupData[{
Cell[162317, 3713, 308, 6, 28, "Input",ExpressionUUID->"cd22fbc3-ba76-410b-9ee7-32e2acc34241"],
Cell[162628, 3721, 470, 7, 32, "Output",ExpressionUUID->"bb6c6fbb-7ee9-41f2-871a-b9025691ad2c"]
}, Open  ]],
Cell[163113, 3731, 203, 3, 35, "Text",ExpressionUUID->"814a78ec-89da-4246-870c-3b31974df1fd"],
Cell[CellGroupData[{
Cell[163341, 3738, 1471, 33, 86, "Input",ExpressionUUID->"01e7e587-a6df-4077-9236-2b44457ac8f5"],
Cell[164815, 3773, 1486, 32, 100, "Output",ExpressionUUID->"8bde9647-d928-4cb3-857f-6f657f0e213e"]
}, Open  ]],
Cell[166316, 3808, 183, 3, 35, "Text",ExpressionUUID->"0ac647a2-6298-47ef-874b-ffab840aa18f"],
Cell[CellGroupData[{
Cell[166524, 3815, 272, 4, 28, "Input",ExpressionUUID->"97c9d17d-f4f4-48a8-bdf2-f4fef9b1e60a"],
Cell[166799, 3821, 88038, 1982, 379, "Output",ExpressionUUID->"233b1e7e-db99-4755-94e0-79f94af9611b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

